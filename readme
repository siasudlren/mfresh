1: npm init =>创建package.json文件
       名字 => package name: (day02)
       版本号 => version: (1.0.0)
       描述 => description: mfresh backend project
       入口文件模块 => entry point: (index.js)
       测试文件 => test command: node ./test/index.js
       git 服务器仓库 => git repository: http://tedu.cn/day02.git
       关键词 => keywords: node,vue,mfresh
       作者名字 => author: wupeng
       协议:(mit)开放协议 => license: (ISC)
   修改package.json文件
       {
         "name": "day02",
         "version": "1.0.0",
         "description": "mfresh backend project",
         "main": "index.js",
         "scripts": {
           "test": "node ./test/index.js",
           "start": "node ./index.js",
           "stop": "node ./stop.js"

         },
         "repository": {
           "type": "git",
           "url": "http://tedu.cn/day02.git"
         },
         "keywords": [
           "node",
           "vue",
           "mfresh"
         ],
         "author": "wupeng",
         "license": "ISC",
         "dependencies": {

         }
       }
2: npm i mysql => node_modules
   npm i => node_modules










3: 创建文件service-demo =>   app.js
   引入express
   安装    npm i -s express
4: 编辑app.js 文件 创建服务器   ES6
 test.html
    <a href="http://127.0.0.1:3000/">链接提交的请求都是get请求</a>
    <form action="http://127.0.0.1:3000">
        <input type="text" name="uname"/>
        <input type="submit" value="submit"/>
    </form>
 app.js
   const express = require('express');
   let app=new express();
   app.listen(3000);

   app.get('/',(req,res)=>{
       let userName= req.query.uname;
       let userPwd=req.query.upwd;
       res.end(`userName:${userName},userPwd:${userPwd}`);
   });
5: 安装   npm  i -s body-parser    依赖  可以发送post
 test.html
    <form action="http://127.0.0.1:3000" method="post">
        <input type="text" name="uname"/>
        <input type="password" name="upwd"/>
        <input type="submit" value="submit"/>
    </form>
 app.js
   app.use(bodyParser.urlencoded({extended:true}))
   app.post('/',(req,res)=>{
       let userName= req.body.uname;
       let userPwd=req.body.upwd;
       res.end(`userName:${userName},userPwd:${userPwd}`);
   });
6: 安装   npm  i -g supervisor      全局supervisor  实现服务器热加载
   用法   文件夹内使用 右键 PowerShell =>supervisor app=>rs
7: 安装,mysql 第三方模块 npm i -S mysql
   具体处理用户注册请求
   引入 mysql模块
   创建数据库连接池 pool
   定义sql语句
   执行语句
   判断执行结果
8:服务器端返回相应
    app.post('/signUp', (req, res) => {
        let user = req.body.user;
        let sql = "INSERT INTO db.user VALUES(NULL,?,?,?,?,?,?)";
        pool.query(sql, [user.email, user.username, user.password, user.gender, user.age, user.city], (err, results) => {
            if (err) throw err;
            if (results.affectedRows === 1) {
                res.send({"status": "ok"});
            } else {
                res.send({"status": "err"});
            }
        })
    });


